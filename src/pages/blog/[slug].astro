---
import PageLayout from '@/layouts/layout.astro'
import { getBlogPostBySlug } from '@/features';
import { renderContentToHtml } from '@/utils';
import { User, Calendar } from 'lucide-react'

const { slug } = Astro.params

if (!slug) {
  return Astro.redirect('/404')
}

const post = await getBlogPostBySlug(slug)

if (!post) {
  return Astro.redirect('/404')
}

const contentHtml = renderContentToHtml(post.content);

const articleDisplayTags: string[] = [];
if (post.tags?.length > 0) {
  post.tags.forEach(tag => {
    articleDisplayTags.push(tag.name);
  });
}

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  })
}
---

<PageLayout title={post.title} description={post.excerpt} image={post.image?.url}>
  <main class="py-12 lg:py-16">
    <article class="prose prose-lg mx-auto max-w-4xl px-4">
      {/* Imagen Destacada */}
      {post.image?.url && <img src={post.image.url} alt={post.image.alt} class="mb-8 w-full rounded-lg" />}
      <div class="not-prose mb-6 flex flex-wrap items-center gap-4">
        {/* Categor√≠a */}
        {post.category && (
          <div class="inline-flex self-start bg-black px-4 py-2">
            <span class="text-sm font-medium uppercase tracking-wide text-white">
              {post.category.name}
            </span>
          </div>
        )}
        <!-- Etiquetas -->
        {articleDisplayTags.length > 0 && (
          <div class="flex flex-wrap items-center gap-2">
            {articleDisplayTags.map((tagName) => (
              <span class="bg-neutral-100 text-neutral-800 rounded-md px-3 py-1 text-sm font-medium">
                {tagName}
              </span>
            ))}
          </div>
        )}
      </div>
      
      <h1 class="font-heading text-primary text-4xl font-bold">{post.title}</h1>
      <div class="text-neutral mb-8 flex flex-wrap items-center gap-x-6 gap-y-2 text-base not-prose">
        <div class="flex items-center gap-2">
          <User client:visible className="h-4 w-4" />
          <span>{post.author.nombre}</span>
        </div>
        <div class="flex items-center gap-2">
          <Calendar client:visible className="h-4 w-4" />
          <span>{formatDate(post.publishedDate)}</span>
        </div>
      </div>

      <hr class="mb-8" />

      <div class="prose prose-lg max-w-none" set:html={contentHtml} />

    </article>
  </main>
</PageLayout>